{"version":3,"sources":["src/core/controller.js","src/core/model.js","src/components/image-viewer/image-viewer.constants.js","src/components/image-viewer/image-viewer.model.js","src/helpers/image.helper.js","src/core/view.js","src/components/image-viewer/image-viewer.view.js","src/components/image-viewer/image-viewer.template.js","src/components/image-viewer/image-viewer.controller.js","src/index.js"],"names":["Controller","configuration","modelClass","selector","template","viewClass","model","view","getModel","setModelUpdateHandler","elementRef","addEventListener","event","modelUpdateHandler","detail","updateModel","render","Model","baseModel","modelKeys","Object","keys","entries","forEach","key","value","includes","assign","imageViewerConstants","dragAndDropSelector","dragAndDropActiveClass","fileUploadSelector","viewerSelector","searchBarSelector","imageSelector","searchBarInputSelector","fallbackImageUrl","ImageViewerModel","url","constants","caption","ImageHelper","filename","substring","lastIndexOf","getImageName","indexOf","file","URL","createObjectURL","name","getImageNameFromUrl","imageHelper","renderedAttribute","View","initialModel","getElementRef","onViewUpdated","document","querySelector","innerHTML","reduce","replaceAll","getAttribute","setAttribute","dispatchEvent","CustomEvent","ImageViewerView","setElementsRef","setEvents","dragAndDrop","fileUpload","searchBar","searchBarInput","image","preventAndStopEvent","toggleDragAndDropActive","updateImage","getDataFromFile","dataTransfer","files","target","preventDefault","getDatatFromUrl","active","classList","add","remove","stopPropagation","data","ImageViewerController"],"mappings":"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","file":"src.120c5281.js","sourceRoot":"..","sourcesContent":["export class Controller {\r\n  constructor(configuration) {\r\n    const { modelClass, selector, template, viewClass } = configuration;\r\n\r\n    this.model = new modelClass();\r\n    this.view = new viewClass(selector, template, this.model.getModel());\r\n\r\n    this.setModelUpdateHandler();\r\n  }\r\n\r\n  setModelUpdateHandler() {\r\n    this.view.elementRef.addEventListener(\"glModelUpdate\", (event) => {\r\n      this.modelUpdateHandler(event.detail.model);\r\n    });\r\n  }\r\n\r\n  modelUpdateHandler(model) {\r\n    this.model.updateModel(model);\r\n    this.view.render(model);\r\n  }\r\n}\r\n","export class Model {\r\n  constructor(baseModel) {\r\n    this.baseModel = baseModel;\r\n  }\r\n\r\n  updateModel(model) {\r\n    const modelKeys = Object.keys(this.baseModel);\r\n\r\n    Object.entries(model).forEach(([key, value]) => {\r\n      if (modelKeys.includes(key)) this.baseModel[key] = value;\r\n    });\r\n  }\r\n\r\n  getModel() {\r\n    return Object.assign({}, this.baseModel);\r\n  }\r\n}\r\n","export const imageViewerConstants = {\r\n  dragAndDropSelector: \".drag-and-drop\",\r\n  dragAndDropActiveClass: \"drag-and-drop--active\",\r\n  fileUploadSelector: \".file-input--control\",\r\n  viewerSelector: \".image-viewer__figure\",\r\n  searchBarSelector: \".search-bar\",\r\n  imageSelector: \".image-viewer__figure-image\",\r\n  searchBarInputSelector: \".search-bar__input\",\r\n  fallbackImageUrl: \"https://i.stack.imgur.com/y9DpT.jpg\"\r\n};\r\n","import { Model } from \"../../core/model\";\r\nimport { imageViewerConstants as constants } from \"./image-viewer.constants\";\r\n\r\nexport class ImageViewerModel extends Model {\r\n  constructor() {\r\n    super({\r\n      url: constants.fallbackImageUrl,\r\n      caption: \"\"\r\n    });\r\n  }\r\n}\r\n","class ImageHelper {\r\n  getImageName(filename) {\r\n    return filename.substring(0, filename.lastIndexOf(\".\"));\r\n  }\r\n\r\n  getImageNameFromUrl(url) {\r\n    return this.getImageName(\r\n      url.substring(0, url.indexOf(\"?\")).substring(url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  }\r\n\r\n  getDataFromFile(file) {\r\n    return {\r\n      url: URL.createObjectURL(file),\r\n      caption: this.getImageName(file.name)\r\n    };\r\n  }\r\n\r\n  getDatatFromUrl(url) {\r\n    return {\r\n      url,\r\n      caption: this.getImageNameFromUrl(url)\r\n    };\r\n  }\r\n}\r\n\r\nexport const imageHelper = new ImageHelper();\r\n","const renderedAttribute = \"initialized\";\r\n\r\nexport class View {\r\n  constructor(selector, template, initialModel) {\r\n    this.template = template;\r\n    this.elementRef = this.getElementRef(selector);\r\n    this.render(initialModel);\r\n    this.onViewUpdated();\r\n  }\r\n\r\n  onViewUpdated() {}\r\n\r\n  getElementRef(selector) {\r\n    return document.querySelector(`${selector}:not([${renderedAttribute}])`);\r\n  }\r\n\r\n  render(model) {\r\n    this.elementRef.innerHTML = Object.entries(model).reduce(\r\n      (template, [key, value]) => template.replaceAll(`{{${key}}}`, value),\r\n      this.template\r\n    );\r\n\r\n    if (!this.elementRef.getAttribute(renderedAttribute)) {\r\n      this.elementRef.setAttribute(renderedAttribute, true);\r\n    }\r\n\r\n    this.onViewUpdated();\r\n  }\r\n\r\n  updateModel(model) {\r\n    this.elementRef.dispatchEvent(\r\n      new CustomEvent(\"glModelUpdate\", { detail: { model } })\r\n    );\r\n  }\r\n}\r\n","import { imageHelper } from \"../../helpers/image.helper\";\r\nimport { imageViewerConstants as constants } from \"./image-viewer.constants\";\r\nimport { View } from \"../../core/view\";\r\n\r\nexport class ImageViewerView extends View {\r\n  onViewUpdated() {\r\n    this.setElementsRef();\r\n    this.setEvents();\r\n  }\r\n\r\n  setElementsRef() {\r\n    this.dragAndDrop = this.elementRef.querySelector(\r\n      constants.dragAndDropSelector\r\n    );\r\n    this.fileUpload = this.elementRef.querySelector(\r\n      constants.fileUploadSelector\r\n    );\r\n    this.searchBar = this.elementRef.querySelector(constants.searchBarSelector);\r\n    this.searchBarInput = this.elementRef.querySelector(\r\n      constants.searchBarInputSelector\r\n    );\r\n    this.image = this.elementRef.querySelector(constants.imageSelector);\r\n  }\r\n\r\n  setEvents() {\r\n    this.dragAndDrop.addEventListener(\"dragover\", (event) => {\r\n      this.preventAndStopEvent(event);\r\n      this.toggleDragAndDropActive(true);\r\n    });\r\n\r\n    this.dragAndDrop.addEventListener(\"dragleave\", (event) => {\r\n      this.preventAndStopEvent(event);\r\n      this.toggleDragAndDropActive(false);\r\n    });\r\n\r\n    this.dragAndDrop.addEventListener(\"drop\", (event) => {\r\n      this.preventAndStopEvent(event);\r\n      this.toggleDragAndDropActive(false);\r\n      this.updateImage(\r\n        imageHelper.getDataFromFile(event.dataTransfer.files[0])\r\n      );\r\n    });\r\n\r\n    this.fileUpload.addEventListener(\"change\", (event) =>\r\n      this.updateImage(imageHelper.getDataFromFile(event.target.files[0]))\r\n    );\r\n\r\n    this.searchBar.addEventListener(\"submit\", (event) => {\r\n      const url = this.searchBarInput.value;\r\n\r\n      event.preventDefault();\r\n\r\n      if (url) this.updateImage(imageHelper.getDatatFromUrl(url));\r\n    });\r\n\r\n    this.image.addEventListener(\"error\", () =>\r\n      this.updateImage({\r\n        url: constants.fallbackImageUrl,\r\n        caption: \"Image couldn't be loaded!\"\r\n      })\r\n    );\r\n  }\r\n\r\n  toggleDragAndDropActive(active) {\r\n    active\r\n      ? this.dragAndDrop.classList.add(constants.dragAndDropActiveClass)\r\n      : this.dragAndDrop.classList.remove(constants.dragAndDropActiveClass);\r\n  }\r\n\r\n  preventAndStopEvent(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  updateImage(data) {\r\n    this.updateModel(data);\r\n  }\r\n}\r\n","export const template = `\r\n<section class=\"image-viewer\">\r\n  <section class=\"image-viewer__controls\">\r\n    <section class=\"drag-and-drop\">\r\n      <span class=\"drag-and-drop__prompt\">Drag & drop your image here! or</span>\r\n      <p class=\"drag-and-drop__file-upload\">\r\n        Upload your image\r\n        <label class=\"file-input\">\r\n          from your device\r\n          <input class=\"file-input--control\" type=\"file\" accept=\"image/*\" />\r\n        </label>\r\n      </p>\r\n    </section>\r\n    <form class=\"search-bar\">\r\n      <label class=\"search-bar__label\">Type image url</label>\r\n      <input type=\"url\" name=\"imageUrl\" class=\"search-bar__input\" />\r\n      <button class=\"search-bar__button\">View</button>\r\n    </form>\r\n  </section>\r\n  <figure class=\"image-viewer__figure\">\r\n    <img src=\"{{url}}\" alt=\"\" class=\"image-viewer__figure-image\" />\r\n    <figcaption>{{caption}}</figcaption>\r\n  </figure>\r\n</section>\r\n`;\r\n","import { Controller } from \"../../core/controller\";\r\nimport { ImageViewerModel } from \"./image-viewer.model\";\r\nimport { ImageViewerView } from \"./image-viewer.view\";\r\nimport { template } from \"./image-viewer.template\";\r\n\r\nconst configuration = {\r\n  modelClass: ImageViewerModel,\r\n  selector: \"gl-image-viewer\",\r\n  template,\r\n  viewClass: ImageViewerView\r\n};\r\n\r\nexport class ImageViewerController extends Controller {\r\n  constructor() {\r\n    super(configuration);\r\n  }\r\n}\r\n","import { ImageViewerController } from \"./components/image-viewer/image-viewer.controller\";\n\nnew ImageViewerController();\n"]}